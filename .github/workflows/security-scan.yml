# HUMAN TASKS:
# 1. Configure SNYK_TOKEN secret in repository settings
# 2. Set up CodeQL database for the project
# 3. Configure Trivy scanner policies
# 4. Set up security notifications in Slack (security-alerts channel)
# 5. Configure GitHub security issue templates

# Requirement: Regular security audits and vulnerability scanning (7.3 Security Protocols/7.3.3 Security Controls)
name: Security Scan

# Requirement: Automated security scanning and compliance checks (7.3.5 Security Compliance)
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:  # Manual trigger

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # Requirement: Static code analysis with CodeQL (Security Scan Stage)
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: typescript, swift, kotlin
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:typescript,swift,kotlin"
          upload: true
          output: reports/codeql

  # Requirement: Container vulnerability scanning (Security Scan Stage)
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: codeql

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Backend Container
        run: docker build -t founditure-backend:${{ github.sha }} -f src/backend/Dockerfile .

      - name: Build AI Service Container
        run: docker build -t founditure-ai:${{ github.sha }} -f infrastructure/docker/ai.Dockerfile .

      - name: Build Worker Container
        run: docker build -t founditure-worker:${{ github.sha }} -f infrastructure/docker/worker.Dockerfile .

      - name: Run Trivy Scanner
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: |
            founditure-backend:${{ github.sha }}
            founditure-ai:${{ github.sha }}
            founditure-worker:${{ github.sha }}
          format: 'sarif'
          output: 'reports/trivy/results.sarif'
          severity: 'CRITICAL,HIGH'
          timeout: '10m'

      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: reports/trivy/results.sarif
          category: container-security

  # Requirement: Infrastructure security scanning (Security Scan Stage)
  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    needs: container-scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Snyk
        uses: snyk/actions/setup@v1.2.0
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

      - name: Scan Terraform Files
        run: |
          snyk iac test infrastructure/terraform --severity-threshold=high
          snyk iac test infrastructure/terraform/environments/prod --severity-threshold=high

      - name: Scan Kubernetes Manifests
        run: |
          snyk iac test infrastructure/kubernetes/backend --severity-threshold=high
          snyk iac test infrastructure/kubernetes/monitoring --severity-threshold=high

      - name: Generate Infrastructure Report
        run: |
          snyk iac test infrastructure/ --json > reports/snyk/infrastructure-report.json

  # Requirement: Dependency vulnerability scanning (from dependency-check.yml)
  check-dependencies:
    name: Dependency Security Check
    needs: infrastructure-scan
    uses: ./.github/workflows/dependency-check.yml

  # Requirement: Code quality and security analysis (from code-quality.yml)
  code-quality:
    name: Code Quality Analysis
    needs: check-dependencies
    uses: ./.github/workflows/code-quality.yml

  # Requirement: Security notification and reporting
  security-report:
    name: Security Report Generation
    runs-on: ubuntu-latest
    needs: [codeql, container-scan, infrastructure-scan, check-dependencies, code-quality]
    if: always()

    steps:
      - name: Generate Security Report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "## CodeQL Analysis" >> security-report.md
          cat reports/codeql/results || echo "No CodeQL results" >> security-report.md
          echo "## Container Security" >> security-report.md
          cat reports/trivy/results.sarif || echo "No Trivy results" >> security-report.md
          echo "## Infrastructure Security" >> security-report.md
          cat reports/snyk/infrastructure-report.json || echo "No Snyk results" >> security-report.md

      - name: Create Issue for High Severity Findings
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ High Severity Security Issues Detected',
              body: report,
              labels: ['security', 'high-severity']
            });

      - name: Send Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: security-alerts
          SLACK_COLOR: danger
          SLACK_TITLE: Security Scan Results
          SLACK_MESSAGE: 'High severity security issues detected in the latest scan'
          SLACK_FOOTER: 'Founditure Security Pipeline'

      - name: Upload Scan Results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            security-report.md
            reports/
          retention-days: 30