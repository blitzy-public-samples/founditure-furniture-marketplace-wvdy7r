# Human Tasks:
# 1. Create and configure default dashboards in configmap
# 2. Set up Grafana SMTP settings for alerts if needed
# 3. Configure LDAP integration if required
# 4. Review and adjust resource limits based on usage patterns
# 5. Set up persistent storage for Grafana if needed in production

# Addresses requirements:
# - Section 3.3.4 Infrastructure/Technology Stack: Grafana monitoring visualization platform
# - Appendix D/System Health Metrics: Performance, reliability and security monitoring

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          # Grafana container image version 9.5.3 as specified in external dependencies
          image: grafana/grafana:9.5.3
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: founditure-backend-secrets
                  key: grafana-admin-password
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
              value: "/etc/grafana/provisioning/dashboards/default.json"
            # Additional security configurations
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "false"
            - name: GF_SECURITY_COOKIE_SECURE
              value: "true"
            - name: GF_SECURITY_DISABLE_GRAVATAR
              value: "true"
            - name: GF_SECURITY_STRICT_TRANSPORT_SECURITY
              value: "true"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
          resources:
            limits:
              cpu: "1000m"
              memory: "1Gi"
            requests:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
          securityContext:
            runAsUser: 472
            runAsGroup: 472
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-datasources
          configMap:
            name: prometheus-config
        - name: grafana-dashboards
          configMap:
            name: prometheus-config
      securityContext:
        fsGroup: 472
        runAsNonRoot: true
      serviceAccountName: grafana