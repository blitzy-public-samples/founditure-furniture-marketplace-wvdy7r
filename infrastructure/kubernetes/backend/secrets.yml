# Human Tasks:
# 1. Generate and provide base64 encoded values for all secrets before applying
# 2. Configure AWS KMS key for encryption-at-rest
# 3. Set up RBAC policies to restrict secret access
# 4. Implement regular key rotation schedule
# 5. Verify TLS certificate validity and expiration
# 6. Ensure AWS IAM credentials follow least privilege principle

# Kubernetes v1.24+
apiVersion: v1
kind: Secret
metadata:
  name: founditure-backend-secrets
  namespace: default
  labels:
    app: founditure
    component: backend
  annotations:
    # Requirement: 7.2.1 Encryption Standards - AES-256 encryption with AWS KMS
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/kms-key-id"
type: Opaque
data:
  # Database Credentials
  # Required for secure database authentication
  POSTGRES_USER: "" # base64 encoded
  POSTGRES_PASSWORD: "" # base64 encoded
  MONGO_USER: "" # base64 encoded
  MONGO_PASSWORD: "" # base64 encoded
  REDIS_PASSWORD: "" # base64 encoded

  # Authentication Secrets
  # Requirement: 7.1.1 Authentication Flow - JWT and OAuth2.0 configuration
  JWT_SECRET_KEY: "" # base64 encoded, min 32 chars
  JWT_REFRESH_SECRET: "" # base64 encoded, min 32 chars
  OAUTH_CLIENT_ID: "" # base64 encoded
  OAUTH_CLIENT_SECRET: "" # base64 encoded

  # Encryption Keys
  # Requirement: 7.2.1 Encryption Standards - AES-256 encryption
  AES_ENCRYPTION_KEY: "" # base64 encoded, 256-bit key
  AWS_KMS_KEY_ID: "" # base64 encoded
  AWS_ACCESS_KEY_ID: "" # base64 encoded
  AWS_SECRET_ACCESS_KEY: "" # base64 encoded

  # Communication Secrets
  # Requirement: 7.3.1 Network Security - TLS 1.3 certificates
  TLS_PRIVATE_KEY: "" # base64 encoded
  TLS_CERTIFICATE: "" # base64 encoded
  MQTT_PASSWORD: "" # base64 encoded
  WEBSOCKET_AUTH_KEY: "" # base64 encoded